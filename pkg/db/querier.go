// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// Counts total ranges for a service
	CountRanges(ctx context.Context, serviceID string) (int64, error)
	// Creates a new range allocation for a service
	CreateRange(ctx context.Context, arg CreateRangeParams) (*Range, error)
	// Deletes a range (for testing purposes)
	DeleteRange(ctx context.Context, arg DeleteRangeParams) error
	// Gets the last allocated range for a service in a specific region
	GetLastRangeForService(ctx context.Context, arg GetLastRangeForServiceParams) (*Range, error)
	// Gets a range by its ID
	GetRange(ctx context.Context, rangeID uuid.UUID) (*Range, error)
	// Gets ranges by status
	GetRangesByStatus(ctx context.Context, arg GetRangesByStatusParams) ([]*Range, error)
	// Gets all ranges for a service in a specific region
	GetServiceRanges(ctx context.Context, arg GetServiceRangesParams) ([]*Range, error)
	// Lists ranges for a service with optional filters
	ListRanges(ctx context.Context, arg ListRangesParams) ([]*Range, error)
	// Updates the status of a range
	UpdateRangeStatus(ctx context.Context, arg UpdateRangeStatusParams) (*Range, error)
}

var _ Querier = (*Queries)(nil)
